"""
A. Кроссворд

Ограничение времени	1 секунда
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Решение кроссвордов — популярное времяпрепровождение. Новый сервис Яндекс.Кроссоворды будет предлагать пользователям подобрать кроссворд, распечатать его и решить на бумаге. Однако? в таком случае проверить правильность решения кроссворда непросто.
Кроссворд расположен на клетчатом поле, состоящим из RR строк и CC столбцов. Каждая клетка покрашена в белый цвет (туда можно вписать букву) или в черный. Пользователь сервиса будет решать кроссворд и выписывать слова в белые клетки горизонтально (слева-направо) или вертикально (сверху-вниз) по одной букве в клетке. После решения кроссворда незаполненных белых клеток не остается. Словом называется горизонтальная или вертикальная последовательность клеток с буквами, ограниченная по краям черными клетками или границами поля.
Для проверки правильности решения кроссворда пользователь должен ввести в качестве ответа лексикографически минимальное слово (первое в алфавитном порядке), причем длина слова должна быть не меньше 2 символов.
Ваша задача состоит в том, чтобы определить ответ по разгаданному кроссворду.
Формат ввода
В первой строке вводится два целых числа RR и CC (1≤R,C≤201≤R,C≤20) — количество строк и столбцов соответственно.
В следующих RR строках вводится по одному слову, каждое слово состоит из прописных латинских букв и символов ”#”, обозначающих черную клетку.
Гарантируется, что существует хотя бы одно слово длиной в 2 или более символов.
Формат вывода
Выведите лексикографически минимальное слово, длина которого не меньше 2 символов.

Пример 1

Ввод
3 3
yan
d#e
##x
Вывод
nex

Пример 2
Ввод
4 2
c#
on
te
st
Вывод
cots

Пример 3
Ввод
2 5
inter
nship
Вывод
ei

Примечания
В первом примере в кроссворде всего 3 слова: yd, yan и nex. Минимальным является nex
Во втором примере по вертикали есть 2 слова: cont и net. По горизонтали 3 слова: on, te, st. Обратите внимание, что слово ”с” в первой горизонтали не подходит — оно состоит только из одной буквы.
В третьем примере все слова по горизонталям и вертикалям состоят из 2 или более букв, минимальным является ei.

"""

def find_words(strng: str):
    words = strng.split('#')
    tmp_list = []
    for word in words:
        if len(word) >= 2:
            tmp_list.append(word)
    return tmp_list


result_list = []
words_list = []
all_words_dict = {}
all_words_list = []
R, C = map(int, input().split())
for _ in range(R):
    word = input()
    words_list.append(word)
    word_check = find_words(word)
    if word_check:
        for word in word_check:
            all_words_list.append(word)

for i in range(C):
    tmp_list = []
    tmp_word = ''
    for word in words_list:
        tmp_list.append(word[i])
    tmp_word = ''.join(tmp_list)
    word_check = find_words(tmp_word)
    if word_check:
        for word in word_check:
            all_words_list.append(word)
min_word = min(all_words_list)
print(min_word)

# print(words_list)
# print(all_words_list)
# min_in_row = min(words_list)
# min_in_col = min(words_list_col)
# print(min_in_row)
# print(min_in_col)

# print(' '.join(result_list))
